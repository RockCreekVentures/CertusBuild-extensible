services:
  certusbuild-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: certusbuild/planning-app:latest
    container_name: certusbuild-planning
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      # Override certain values from env file if needed
      - REDIS_URL=redis://redis:6379
      # Enable authentication bypass for testing (remove for prod)
      - AUTH_BYPASS_ENABLED=true
    volumes:
      - certusbuild_data:/app/public/content
      - certusbuild_uploads:/app/public/uploads
    depends_on:
      - redis
    networks:
      - certusbuild-network

  # Redis for session storage
  redis:
    image: redis:alpine
    container_name: certusbuild-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - certusbuild-network
    command: redis-server --appendonly yes

  # Nginx reverse proxy
  nginx:
    image: nginx:stable-alpine
    container_name: nginx-certusbuild
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/certusbuild.conf:/etc/nginx/conf.d/certusbuild.conf
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - certusbuild-network
    depends_on:
      - certusbuild-app
  
  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  certusbuild-network:
    driver: bridge

volumes:
  certusbuild_data:
  certusbuild_uploads:
  redis_data:
