version: '3.8'

services:
  certusbuild-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: certusbuild/planning-app:latest
    container_name: certusbuild-planning
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      # These environment variables should be set in a .env file or through environment
      # - SESSION_SECRET=your_secret_key
      # - AUTH_CLIENT_ID=certusbuild_planning
      # - AUTH_CLIENT_SECRET=your_client_secret
      # - AUTH_ISSUER=https://auth.rockcreekventures.com/application/o/certusbuild_planning/
      # - AUTH_CALLBACK_URL=https://planning.certusbuild.com/auth/callback
      # - AUTH_SCOPE=openid profile email
      # - BASE_URL=https://planning.certusbuild.com
    volumes:
      - certusbuild_data:/app/public/content
      - certusbuild_uploads:/app/public/uploads
    networks:
      - certusbuild-network

  # Nginx reverse proxy
  nginx:
    image: nginx:stable-alpine
    container_name: nginx-certusbuild
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/certusbuild.conf:/etc/nginx/conf.d/certusbuild.conf
      - ./nginx/logs:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - certusbuild-network
    depends_on:
      - certusbuild-app
  
  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  certusbuild-network:
    driver: bridge

volumes:
  certusbuild_data:
  certusbuild_uploads: