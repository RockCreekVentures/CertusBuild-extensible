services:
  cb-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: certusbuild/planning-app:latest
    container_name: cb-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      # These environment variables should be set in a .env file or through environment
      - SESSION_SECRET=${SESSION_SECRET}
      - AUTH_CLIENT_ID=${AUTH_CLIENT_ID}
      - AUTH_CLIENT_SECRET=${AUTH_CLIENT_SECRET}
      - AUTH_ISSUER=${AUTH_ISSUER}
      - AUTH_CALLBACK_URL=${AUTH_CALLBACK_URL}
      - AUTH_SCOPE=${AUTH_SCOPE}
      - BASE_URL=${BASE_URL}
    volumes:
      - certusbuild_data:/app/public/content
      - certusbuild_uploads:/app/public/uploads
    depends_on:
      - redis
    networks:
      cb-net:
        aliases:
          - certusbuild-planning
          - cb-planning

  # Redis for session storage
  redis:
    image: redis:alpine
    container_name: cb-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      cb-net:
        aliases:
          - redis
          - memdb
    command: redis-server --appendonly yes

  # Nginx reverse proxy
  nginx:
    image: nginx:stable-alpine
    container_name: cb-nginx
    restart: unless-stopped
    ports:
      - "18080:80"
      - "18443:443"
    volumes:
      - ./nginx/certusbuild.conf:/etc/nginx/conf.d/certusbuild.conf
      - ./nginx/logs:/var/log/nginx
      - /root/certs/planning.certusbuild:/etc/letsencrypt/live/planning.certusbuild.com:ro
#      - ./certbot/www:/var/www/certbot
    networks:
      - cb-net
    depends_on:
      - cb-app

  # Certbot for SSL certificates
#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  cb-net:
    driver: bridge

volumes:
  certusbuild_data:
  certusbuild_uploads:
  redis_data:
